package view;

import controller.PrestamoDAO;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Prestamos;

public class ListadoPrestamos extends javax.swing.JFrame {
       private DefaultTableModel modeloTabla;
       private PrestamoDAO  PrestamoDAO = new PrestamoDAO();

    /**
     * Creates new form ListadoLibros
     */
    public ListadoPrestamos() {
        initComponents();
        setTitle("Consulta de Préstamos");
        setLocationRelativeTo(null);
        modeloTabla = (DefaultTableModel) tbl_prestamos.getModel();
        configurarColumnas();
        cargarDatos();
        refrescarInfo(); 
    }
    
   private void cargarDatos() {
        modeloTabla.setRowCount(0);
        List<Object> prestamos = PrestamoDAO.getAll();
        for (Object prestamo_uncast : prestamos) {
            Prestamos p = (Prestamos) prestamo_uncast;
            modeloTabla.addRow(new Object[]{
                p.getId_Prestamo(),
                p.getTituloLibro(),     // mostrar nombre del libro
                p.getCantidad(),
                p.getNombreUsuario(),   // mostrar nombre del usuario
                p.getNombreEmpleado(),  // mostrar nombre del empleado
                p.getFecha_Prestamo(),
                p.getFecha_limite()
            });
        }
    }
    
    
    
    public void refrescarInfo() { 
        cargarDatos();
        tbl_prestamos.setDefaultRenderer(Object.class, new javax.swing.table.DefaultTableCellRenderer() {
            @Override
            public java.awt.Component getTableCellRendererComponent(javax.swing.JTable table, Object value, boolean isSelected,
                    boolean hasFocus, int row, int column) {
                java.awt.Component c = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
                String fechaPrestamoStr = table.getValueAt(row, 5).toString();
                java.time.LocalDate fechaPrestamo = java.time.LocalDate.parse(fechaPrestamoStr);
                java.time.LocalDate hoy = java.time.LocalDate.now();

                if (fechaPrestamo.isAfter(hoy)) {
                    c.setBackground(java.awt.Color.RED);
                } else {
                    c.setBackground(isSelected ? table.getSelectionBackground() : java.awt.Color.WHITE);
                }
                return c;
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_prestamos = new javax.swing.JTable();
        btn_insertar = new javax.swing.JButton();
        txt_salir = new javax.swing.JButton();
        btn_Actualizar = new javax.swing.JButton();
        btn_delete = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tbl_prestamos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID Prestamo", "ID Libro", "Cantidad", "ID Usuario", "Empleado", "Fecha Prestamo", "Fecha Limite"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbl_prestamos);

        btn_insertar.setText("Insertar");
        btn_insertar.setPreferredSize(new java.awt.Dimension(90, 23));
        btn_insertar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_insertarActionPerformed(evt);
            }
        });

        txt_salir.setText("Salir");
        txt_salir.setPreferredSize(new java.awt.Dimension(90, 23));
        txt_salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_salirActionPerformed(evt);
            }
        });

        btn_Actualizar.setText("Actualizar");
        btn_Actualizar.setPreferredSize(new java.awt.Dimension(90, 23));
        btn_Actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ActualizarActionPerformed(evt);
            }
        });

        btn_delete.setText("Borrar");
        btn_delete.setPreferredSize(new java.awt.Dimension(90, 23));
        btn_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 714, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 17, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(93, 93, 93)
                .addComponent(btn_insertar, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_Actualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_salir, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_insertar, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_salir, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_Actualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_insertarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_insertarActionPerformed
     FormularioPrestamos form = new FormularioPrestamos(this, true, "INS", 0); 
    form.setVisible(true);
     refrescarInfo();
    }//GEN-LAST:event_btn_insertarActionPerformed

    private void txt_salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_salirActionPerformed
        // TODO add your handling code here:
      this.dispose(); 
    }//GEN-LAST:event_txt_salirActionPerformed

    private void btn_ActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ActualizarActionPerformed

     int fila = tbl_prestamos.getSelectedRow();
     if (fila >= 0) {
    int id_prestamo = Integer.parseInt(tbl_prestamos.getValueAt(fila, 0).toString());
    FormularioPrestamos form = new FormularioPrestamos(this, true, "UPD", id_prestamo);
    form.setVisible(true);
    refrescarInfo(); // Recarga la tabla después de actualizar
} else {
    JOptionPane.showMessageDialog(this, "Debe seleccionar un registro primero.");
}
     
    }//GEN-LAST:event_btn_ActualizarActionPerformed

    private void btn_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deleteActionPerformed
        // TODO add your handling code here:
      int fila = tbl_prestamos.getSelectedRow();
if (fila >= 0) {
    int id_prestamo = Integer.parseInt(tbl_prestamos.getValueAt(fila, 0).toString());
    int confirm = JOptionPane.showConfirmDialog(this, "¿Está seguro de eliminar este préstamo?", "Confirmar", JOptionPane.YES_NO_OPTION);
    if (confirm == JOptionPane.YES_OPTION) {
        PrestamoDAO dao = new PrestamoDAO();
         // VALIDACIÓN: Si tiene devolución relacionada, no se elimina
            if (dao.tieneDevolucionRelacionada(id_prestamo)) {
                JOptionPane.showMessageDialog(this, "No se puede eliminar el préstamo porque ya tiene una devolución registrada.");
                return;
            }
        
        dao.delete(id_prestamo);
        refrescarInfo(); 
    }
} else {
    JOptionPane.showMessageDialog(this, "Debe seleccionar un registro primero.");
}
        
        
    }//GEN-LAST:event_btn_deleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(() -> {
            new ListadoPrestamos().setVisible(true);
        });
    }
    
    
    private void configurarColumnas() {
    tbl_prestamos.getColumnModel().getColumn(0).setPreferredWidth(20);   
    tbl_prestamos.getColumnModel().getColumn(1).setPreferredWidth(140);  
    tbl_prestamos.getColumnModel().getColumn(2).setPreferredWidth(25);  
    tbl_prestamos.getColumnModel().getColumn(3).setPreferredWidth(70);  
    tbl_prestamos.getColumnModel().getColumn(4).setPreferredWidth(120);  
    tbl_prestamos.getColumnModel().getColumn(5).setPreferredWidth(80); 
    tbl_prestamos.getColumnModel().getColumn(6).setPreferredWidth(80); 
    
    //tbl_libros.getColumnModel().getColumn(6).setPreferredWidth(100);  

    // Evita que el usuario cambie el tamaño
    for (int i = 0; i < tbl_prestamos.getColumnCount(); i++) {
        tbl_prestamos.getColumnModel().getColumn(i).setResizable(false);
    }
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Actualizar;
    private javax.swing.JButton btn_delete;
    private javax.swing.JButton btn_insertar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbl_prestamos;
    private javax.swing.JButton txt_salir;
    // End of variables declaration//GEN-END:variables
}
