
package view;
import controller.LibrosDAO;
import java.sql.Date;
import java.util.List;
import javax.swing.JOptionPane;
import model.Libros;




/**
 *
 * @author Novitus
 */
public class FormularioLibros extends javax.swing.JDialog {
    private String mode;
    private int id_libro;
    private LibrosDAO dao;
    private ListadoLibros parent;
    private com.toedter.calendar.JDateChooser dateChooserFecha;
    

    /**
     * Creates new form FormularioLibros
     */
    public FormularioLibros(ListadoLibros pParent, boolean modal, String pMode, int pId_Libro) {
        super(pParent, modal);
        this.parent = pParent;
        initComponents();
        
        cargarCategoriasEnCombo();
        
        dateChooserFecha = new com.toedter.calendar.JDateChooser();
        dateChooserFecha.setDateFormatString("yyyy-MM-dd");
        dateChooserFecha.setFont(new java.awt.Font("Segoe UI", 0, 18));
        


        this.getContentPane().add(dateChooserFecha); // Agr√©galo al formulario
        txt_fecha.setVisible(false); // Oculta el JTextField original
        
        
        
        //permitirSoloNumeros(txt_categoria);
        permitirSoloNumeros(txt_edicion);
        
        
        
        dao = new LibrosDAO();
        this.mode = pMode;
        this.id_libro = pId_Libro;
        txt_id.setText(String.valueOf(pId_Libro));
        
        if(mode.equals("INS")){
            btn_accion.setText("Insertar");
            setTitle("Formulario Insertar");
        }else if(mode.equals("UPD")){
            setTitle("Formulario Actualizar");
            Libros libro = (Libros) dao.getById(id_libro);
            txt_nombre.setText(libro.getTitulo_Libro());
            
            String categoria = cboCategoria.getSelectedItem().toString().split(" - ")[0];
           
           // libro.setId_Categoria(obtenerIdCategoriaSeleccionada());
            
            
                    
            //cboCategoria.setText(String.valueOf(libro.getId_Categoria()));
            
            txt_edicion.setText(String.valueOf(libro.getEdicion()));
            txt_editorial.setText(libro.getEditorial());
            //txt_fecha.setText(libro.getFecha_Publicacion().toString());
            
            if (libro.getFecha_Publicacion() != null) {
            java.util.Date fechaUtil = new java.util.Date(libro.getFecha_Publicacion().getTime());
            dateChooserFecha.setDate(fechaUtil);
}
            
            
            btn_accion.setText("Actualizar");            
        }
        else if(mode.equals("DLT")){
            setTitle("Formulario Eliminar");
            Libros libro = (Libros) dao.getById(id_libro);
            txt_nombre.setText(libro.getTitulo_Libro());
            txt_nombre.setEnabled(false);
            
            //txt_categoria.setText(String.valueOf(libro.getId_Categoria()));
            //txt_categoria.setEnabled(false);
            String categoria = cboCategoria.getSelectedItem().toString().split(" - ")[0];
            //String categoria = String.valueOf(libro.getId_Categoria()); // o libro.getCategoria()
            for (int i = 0; i < cboCategoria.getItemCount(); i++) {
                 if (cboCategoria.getItemAt(i).startsWith(categoria + " ")) {
                    cboCategoria.setSelectedIndex(i);
                    cboCategoria.setEnabled(false);
                    break;
                 }
              }

            
            txt_edicion.setText(String.valueOf(libro.getEdicion()));
            txt_edicion.setEnabled(false);
            
            txt_editorial.setText(libro.getEditorial());
            txt_editorial.setEnabled(false);
            
            txt_fecha.setText(libro.getFecha_Publicacion().toString());
            txt_fecha.setEnabled(false);
            
            
            btn_accion.setText("Eliminar");            
        }
        
        dateChooserFecha.setBounds(txt_fecha.getX(), txt_fecha.getY(), txt_fecha.getWidth(), txt_fecha.getHeight());
        if(mode.equals("DLT")){
            dateChooserFecha.setEnabled(false);
            lbl_fecha.setEnabled(false);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txt_id = new javax.swing.JTextField();
        txt_nombre = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btn_accion = new javax.swing.JButton();
        btn_salir = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txt_edicion = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        lbl_fecha = new javax.swing.JLabel();
        txt_editorial = new javax.swing.JTextField();
        txt_fecha = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        cboCategoria = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        txt_id.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txt_id.setEnabled(false);

        txt_nombre.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txt_nombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_nombreActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("Id:");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setText("Nombre:");

        btn_accion.setText("jButton1");
        btn_accion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_accionActionPerformed(evt);
            }
        });

        btn_salir.setText("Salir");
        btn_salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_salirActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel3.setText("Categoria:");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel4.setText("Edicion:");

        txt_edicion.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel5.setText("Editorial:");

        lbl_fecha.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lbl_fecha.setText("Fecha:");

        txt_editorial.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txt_editorial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_editorialActionPerformed(evt);
            }
        });

        txt_fecha.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txt_fecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_fechaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addComponent(btn_accion, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57)
                .addComponent(btn_salir, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(93, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jSeparator1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel2)
                                .addComponent(jLabel1))
                            .addComponent(jLabel3)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_fecha, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txt_id, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_nombre)
                            .addComponent(txt_editorial, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE)
                            .addComponent(txt_edicion)
                            .addComponent(txt_fecha)
                            .addComponent(cboCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(48, 48, 48))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(cboCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txt_edicion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(37, 37, 37))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txt_editorial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_fecha)
                    .addComponent(txt_fecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_accion, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_salir, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_accionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_accionActionPerformed
        // TODO add your handling code here:
        if(mode.equals("INS")){
            Libros libro = new Libros();
            libro.setTituloLibro(txt_nombre.getText());
            //libro.setId_Categoria(Integer.parseInt(txt_categoria.getText()));
            //libro.setId_Categoria(Integer.parseInt(cboCategoria.getText()));
            
           //libro.setId_Categoria(obtenerIdCategoriaSeleccionada());
            int idCategoria = obtenerIdCategoriaSeleccionada();
                if (idCategoria == -1) {
                    JOptionPane.showMessageDialog(this, "Debe seleccionar una categor√≠a valida");
                    return;
                }
            libro.setId_Categoria(idCategoria);
            
            
            libro.setEdicion(Integer.parseInt(txt_edicion.getText()));
            libro.setEditorialLibro(txt_editorial.getText());
            
            try{
           // Date fecha = Date.valueOf(txt_fecha.getText());
            //libro.setFecha_Publicacion(fecha);
           java.util.Date utilDate = dateChooserFecha.getDate();
           if(utilDate == null){
               JOptionPane.showMessageDialog(this, "Debe seleccionar una fecha");
           return;
           }
           Date fecha = new Date(utilDate.getTime());
           libro.setFecha_Publicacion(fecha);
           
            
            }catch(IllegalArgumentException e){
            JOptionPane.showMessageDialog(this,"Formato de fecha invalido, (AAAA-MM-DD.)");
            return;
            }                        
           dao.insert(libro);           
           parent.refrescarInfo();
           this.dispose();
        }
        if(mode.equals("UPD")){
            Libros libro = new Libros();
            libro.setTituloLibro(txt_nombre.getText());
            libro.setIdLibro(id_libro);
           // libro.setId_Categoria(Integer.parseInt(txt_categoria.getText()));
           
          // libro.setId_Categoria(obtenerIdCategoriaSeleccionada());
           int idCategoria = obtenerIdCategoriaSeleccionada();
            if (idCategoria == -1) {
                JOptionPane.showMessageDialog(this, "Debe seleccionar una categor√≠a v√°lida");
                return;
            }
           libro.setId_Categoria(idCategoria);
          
          
          
           
            libro.setEdicion(Integer.parseInt(txt_edicion.getText()));
            libro.setEditorialLibro(txt_editorial.getText());
            
            try{
            //Date fecha = Date.valueOf(txt_fecha.getText());
            //libro.setFecha_Publicacion(fecha);
            java.util.Date utilDate = dateChooserFecha.getDate();
            if(utilDate == null){
                JOptionPane.showMessageDialog(this, "Debe seleccionar una fecha");
                return;
            
            }
            Date fecha = new Date(utilDate.getTime());
            libro.setFecha_Publicacion(fecha);
        
            }catch(IllegalArgumentException e){
            JOptionPane.showMessageDialog(this,"Formato de fecha invalido, (AAAA-MM-DD.)");
            return;
            }                        
           dao.update(libro);           
           parent.refrescarInfo();
           this.dispose();
        }
        
        if(mode.equals("DLT")){              
           dao.delete(id_libro);           
           parent.refrescarInfo();
           this.dispose();
        }
        
    }//GEN-LAST:event_btn_accionActionPerformed

    private void txt_nombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_nombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_nombreActionPerformed

    private void txt_editorialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_editorialActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_editorialActionPerformed

    private void btn_salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_salirActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btn_salirActionPerformed

    private void txt_fechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_fechaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_fechaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormularioLibros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormularioLibros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormularioLibros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormularioLibros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FormularioLibros dialog = new FormularioLibros(new ListadoLibros(), true, "INS", 0);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    
    
    private int obtenerIdCategoriaSeleccionada() {
    String itemSeleccionado = (String) cboCategoria.getSelectedItem();
    if (itemSeleccionado != null && itemSeleccionado.contains(" - ")) {
        String[] partes = itemSeleccionado.split(" - ");
        try {
            return Integer.parseInt(partes[0]); // Retorna el n√∫mero antes del guion
        } catch (NumberFormatException e) {
            e.printStackTrace();
        }
    }
    return -1; // En caso de error
}
    
    
    
    private void permitirSoloNumeros(javax.swing.JTextField campo) {
    campo.addKeyListener(new java.awt.event.KeyAdapter() {
        @Override
        public void keyTyped(java.awt.event.KeyEvent evt) {
            char c = evt.getKeyChar();
            if (!Character.isDigit(c) && c != '\b') {
                evt.consume(); // Bloquear el car√°cter
                javax.swing.JOptionPane.showMessageDialog(
                    null, "Solo se permiten numeros en este campo.", 
                    "Entrada inv√°lida", 
                    javax.swing.JOptionPane.WARNING_MESSAGE
                );
            }
        }
    });
}


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_accion;
    private javax.swing.JButton btn_salir;
    private javax.swing.JComboBox<String> cboCategoria;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lbl_fecha;
    private javax.swing.JTextField txt_edicion;
    private javax.swing.JTextField txt_editorial;
    private javax.swing.JTextField txt_fecha;
    private javax.swing.JTextField txt_id;
    private javax.swing.JTextField txt_nombre;
    // End of variables declaration//GEN-END:variables

    private void cargarCategoriasEnCombo() {
      cboCategoria.removeAllItems(); // Limpia el combo

        LibrosDAO dao = new LibrosDAO();
        List<String> categorias = dao.obtenerCategoriasCombo();

    for (String categoria : categorias) {
        cboCategoria.addItem(categoria);
    }  
    }
}
